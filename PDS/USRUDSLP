/* rexx */
/*********************************************************************/
/* The following code is added to ISRUDLS0 for block deletes to      */
/* process embedded VSAM files without stopping.  The dynamic area   */
/* in the ZDATA variable will be be parsed to determine if the user  */
/* entered a valid //D block command.  If so, the command in the     */
/* ZDATA dynamic area will be modified to change the //D to a        */
/* //USRDEL34 exec.  USRDEL34 is an exec in ISP.SISPCLIB which will  */
/* invoke IDCAMS to delete PS, PO, PO-E, and VSAM files, without     */
/* stopping on VSAM files.  The tradeoff for the convenience of      */
/* deleting the VSAM files without stopping is the loss of stopping  */
/* on errors.  The user will have to REFRESH the dataset list in     */
/* order to determine if all datasets were successfully deleted.     */
/*                                                                   */
/* Change Log                                                        */
/*                                                                   */
/*    Date    Name           Description                             */
/* ---------- -------------- --------------------------------------- */
/* 2021/02/12 Conley         Move Rexx code in )PROC section of      */
/*                           ISRUDSL0 into this panel exit.          */
/* 2018/12/12 Conley         Initial coding.                         */
/*********************************************************************/
call isprexpx('I')
/*********************************************************************/
/* If the user entered a volume, don't attempt to change any //D     */
/* commands to USRDEL34.  USRDEL34 will only delete the cataloged    */
/* entries of any datasets passed to it, so this will avoid any      */
/* confusion.                                                        */
/*********************************************************************/
if zdlpvl <> '' then
   exit
/*********************************************************************/
/* Determine the length of zdata, then get the number of lines by    */
/* integer dividing by 80 and adding 1 (zdata length is not usually  */
/* a multiple of 80).                                                */
/*********************************************************************/
lenzdata = length(zdata)
#lines = (lenzdata % 80) + 1
/*********************************************************************/
/* Loop through each line to parse the data.                         */
/*********************************************************************/
do i = 1 to #lines
   endpos   = i * 80
   startpos = endpos - 79
/*********************************************************************/
/* Determine a starting position (startpos) and ending position      */
/* (endpos) for each line of the display.  Parse out the beginning   */
/* of zdata (begzdata), the screen line, (scrnline) and the rest of  */
/* zdata (rstzdata).                                                 */
/*********************************************************************/
   parse var zdata begzdata =(startpos) scrnline =(endpos) rstzdata
/*********************************************************************/
/* Parse the screen line into the attribute byte in position 1       */
/* (attr), command area in positions 2-6 (command), and the rest of  */
/* the screen line (rstline) from columns 13-80.                     */
/*********************************************************************/
   parse upper var scrnline 1 attr 2 command 6 13 rstline
/*********************************************************************/
/* If the command field is '//D ', then change the command to        */
/* //USRDEL34 and piece the zdata dynamic area back together.  If    */
/* the '//D ' does not appear in column 2 of the screen line, then   */
/* the command will not be changed to USERDEL34.  This may seem      */
/* overly restrictive, but greatly simplifies the Rexx code.         */
/* Concatenate the beginning of zdata, the attribute byte of the     */
/* current line, change the command to '//USRDEL34 ', complete the   */
/* rest of the current line, then complete the rest of zdata.        */
/*********************************************************************/
   if command = '//D ' then
      zdata = begzdata      ||,
              attr          ||,
              '//USRDEL34 ' ||,
              rstline       ||,
              rstzdata
end
call isprexpx('T')
exit
